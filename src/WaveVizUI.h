/***********************************************************************************
	Copyright 2006. Akshay Mishra	

	This file is part of WaveVIZ.

	WaveVIZ is free software; you can redistribute it and/or modify
	it under the terms of the GNU General Public License as published by
	the Free Software Foundation; either version 2 of the License, or
	(at your option) any later version.
	
	WaveVIZ is distributed in the hope that it will be useful,
	but WITHOUT ANY WARRANTY; without even the implied warranty of
	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	GNU General Public License for more details.
	
	You should have received a copy of the GNU General Public License
	along with WaveVIZ; if not, write to the Free Software
	Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
************************************************************************************/	
// generated by Fast Light User Interface Designer (fluid) version 1.0107

#ifndef WaveVizUI_h
#define WaveVizUI_h
#include <FL/Fl.H>
#include <FL/Fl_Window.H>
#include <FL/Fl_Group.H>
#include <FL/Fl_Roller.H>
#include "application.h"
#include "includeall.h"
#include <FL/Fl_Slider.H>
#include <FL/Fl_Light_Button.H>
#include <FL/Fl_Input.H>
#include <FL/Fl_Button.H>
#include <FL/Fl_Round_Button.H>
#include <FL/Fl_Check_Button.H>

class WaveVizUI {
public:
  WaveVizUI();
private:
  Fl_Window *mainWindow;
  Fl_Group *VChange;
  Fl_Roller *vrot;
  void cb_vrot_i(Fl_Roller*, void*);
  static void cb_vrot(Fl_Roller*, void*);
  Fl_Group *HChange;
  Fl_Roller *hrot;
  void cb_hrot_i(Fl_Roller*, void*);
  static void cb_hrot(Fl_Roller*, void*);
  Fl_Group *MainView;
public:
  CApplication *app;
private:
  Fl_Slider *zoom;
  void cb_zoom_i(Fl_Slider*, void*);
  static void cb_zoom(Fl_Slider*, void*);
public:
  Fl_Light_Button *btnCompute;
private:
  void cb_btnCompute_i(Fl_Light_Button*, void*);
  static void cb_btnCompute(Fl_Light_Button*, void*);
  Fl_Input *txtstartdensity;
  Fl_Input *txtenddensity;
  Fl_Button *btnSetDensity;
  void cb_btnSetDensity_i(Fl_Button*, void*);
  static void cb_btnSetDensity(Fl_Button*, void*);
  Fl_Button *btnreset;
  void cb_btnreset_i(Fl_Button*, void*);
  static void cb_btnreset(Fl_Button*, void*);
  Fl_Input *txtcubesize;
  Fl_Group *grpSelector;
public:
  Fl_Round_Button *radHarmonic;
private:
  void cb_radHarmonic_i(Fl_Round_Button*, void*);
  static void cb_radHarmonic(Fl_Round_Button*, void*);
public:
  Fl_Round_Button *radBox;
private:
  void cb_radBox_i(Fl_Round_Button*, void*);
  static void cb_radBox(Fl_Round_Button*, void*);
public:
  Fl_Round_Button *radOneElectron;
private:
  void cb_radOneElectron_i(Fl_Round_Button*, void*);
  static void cb_radOneElectron(Fl_Round_Button*, void*);
public:
  Fl_Check_Button *chkmorph;
private:
  void cb_chkmorph_i(Fl_Check_Button*, void*);
  static void cb_chkmorph(Fl_Check_Button*, void*);
public:
  Fl_Input *txtmorph;
private:
  Fl_Group *grpmorph;
public:
  Fl_Round_Button *radmorph12;
  Fl_Round_Button *radmorph21;
private:
  Fl_Group *grpHarmonic;
public:
  Fl_Input *txtw1;
  Fl_Input *txtw2;
  Fl_Input *txtw3;
  Fl_Input *txtw0;
  Fl_Input *txtw4;
private:
  Fl_Group *grpBox;
public:
  Fl_Input *txtlx;
  Fl_Input *txtly;
  Fl_Input *txtlz;
  Fl_Input *txtnx1;
  Fl_Input *txtny1;
  Fl_Input *txtnz1;
  Fl_Input *txtnx2;
  Fl_Input *txtny2;
  Fl_Input *txtnz2;
  Fl_Input *txtnx3;
  Fl_Input *txtny3;
  Fl_Input *txtnz3;
  Fl_Input *txtnx4;
  Fl_Input *txtny4;
  Fl_Input *txtnz4;
private:
  Fl_Group *grponeelectron;
public:
  Fl_Input *txtz;
  Fl_Input *txtn1;
  Fl_Input *txtl1;
  Fl_Input *txtm1;
  Fl_Input *txtn2;
  Fl_Input *txtl2;
  Fl_Input *txtm2;
  Fl_Input *txtn3;
  Fl_Input *txtl3;
  Fl_Input *txtm3;
  Fl_Input *txtn4;
  Fl_Input *txtl4;
  Fl_Input *txtm4;
private:
  Fl_Group *grpsuperpose;
public:
  Fl_Check_Button *chkwave2;
  Fl_Check_Button *chkwave3;
  Fl_Check_Button *chkwave4;
  Fl_Check_Button *chkwave1;
private:
  Fl_Group *grpstate1;
public:
  Fl_Input *txtre11;
  Fl_Input *txtre12;
  Fl_Input *txtre13;
  Fl_Input *txtre14;
  Fl_Input *txtim11;
  Fl_Input *txtim12;
  Fl_Input *txtim13;
  Fl_Input *txtim14;
private:
  Fl_Group *grpstate2;
public:
  Fl_Input *txtre21;
  Fl_Input *txtre22;
  Fl_Input *txtre23;
  Fl_Input *txtre24;
  Fl_Input *txtim21;
  Fl_Input *txtim22;
  Fl_Input *txtim23;
  Fl_Input *txtim24;
  void show(int argc, char **argv, PCOMPFUNC ptr);
};
#endif
